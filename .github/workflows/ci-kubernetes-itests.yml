name: Quarkus Kubernetes CI

env:
  MAVEN_ARGS: -B -e

on:
  push:
    branches:
      - main
  pull_request_target:
    types: [ opened, edited, labeled, reopened, synchronize ]

jobs:
  cache:
    name: Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Install artifacts
        run: mvn -f pom.xml ${MAVEN_ARGS} -DskipTests clean install -pl :quarkus-integration-test-kubernetes-invoker -am
  kubernetes:
    name: Kubernetes Integration Tests
    needs: cache
    if: (github.event.label.name == 'area/kubernetes' || contains(github.event.pull_request.labels.*.name, 'area/kubernetes')) &&  ${{ secrets.QUAY_E2E_USERNAME}} != null }} && ${{ secrets.QUAY_E2E_PASSWORD != null }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.20.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.4.1
        with:
          minikube version: v1.16.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--addons=metrics-server --force'
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup Java 11 
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_E2E_USERNAME }}
          password: ${{ secrets.QUAY_E2E_PASSWORD }}
      - name: Run Kubernetes Invoker Tests
        run: |
          export QUARKUS_CONTAINER_IMAGE_GROUP=quarkusio
          export QUARKUS_CONTAINER_IMAGE_TAG=${{ github.sha }}
          export QUARKUS_CONTAINER_IMAGE_REGISTRY=quay.io
          mvn -B clean install -pl :quarkus-integration-test-kubernetes-invoker -Pkubernetes-e2e-tests

  openshift:
    name: Openshift Integration Tests
    needs: cache
    if: github.event.label.name == 'area/kubernetes' || contains(github.event.pull_request.labels.*.name, 'area/kubernetes')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        openshift: [v3.11.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.1.3
        with:
          oc version: ${{ matrix.openshift }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_E2E_USERNAME }}
          password: ${{ secrets.QUAY_E2E_PASSWORD }}
      - name: Run Openshift Invoker Tests
        run: |
          export QUARKUS_CONTAINER_IMAGE_GROUP=quarkusio
          export QUARKUS_CONTAINER_IMAGE_TAG=${{ github.sha }}
          export QUARKUS_CONTAINER_IMAGE_REGISTRY=quay.io
          mvn -B clean install -pl :quarkus-integration-test-kubernetes-invoker -Popenshift-e2e-tests